Check in /usr/lib/jvm if jdk-11 exists.
If it does, skip this:
Download Java 11 (in Jenkins add a JDK for this path)
(sudo apt-get update 
sudo apt-get install openjdk-11-jdk)

Download SonarQube (https://www.sonarqube.org/downloads/ - look for community edition)
Unzip once downloaded
Download Sonar Scanner (https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/)
Unzip once downloaded

Edit Sonar-scanner.properties in conf directory of your sonar scanner unzip
Create a sonar-project.properties in your home directory - this can be an empty file

Install Sonar Scanner plug in on Jenkins

Start SonarQube server
 - cd to sonarqube bin/linux..
 - ./sonar.sh start or ./sonar.sh console to start 
 - localhost:9000 - login with admin/admin
 - goto Administration -> Security -> Users ->admin- generate new token -> copy token
 
Goto  Manage Jenkins > Manage Credentials > System > Global Credentials > Add Credentials
	Kind : Secret test
	Secret : SonarQube Authentication Token
	Description : Provide a descriptive name
	Click OK to add new credentials.
	
Manage Jenkins -> Configure System -> Add SonarQube 
					-> give a name /
					-> URL: http://localhost:9000 
					-> authentication - choose the global credential you added above (SonarJ in my test)

Manage Jenkins -> Global Tool Config -> ensure you have added the new JDK under JDK installs

Manage Jenkins -> Global Tool Config -> Add SonarQube Scanner
	- give it a name
	- SONAR-RUNNER-HOME: give it path to your sonar scanner unzip
	

Create FreeStyle job
  - source: git (sample-maven-app)
  - Build Trigger: None
  - build step1: execute shell: javac '/home/labsuser/jenkins/workspace/SonarQ/src/main/java/com/mycompany/app/App.java' (command & path path to your code that needs compiling)
  - build step2: Execute SonarQube Scanner
	- jdk -> jdk_11
	- Path to project properties: /home/labsuer (created in line 8 above)

 Esnure SonarQube server is running
  Build now
